{"version":3,"sources":["styles/location-details-style.js","components/location-details.js","styles/forecast-styles.js","components/forecast-summary.js","components/forecast-summaries.js","styles/forecast-details-style.js","components/forecast-details.js","components/getForecast.js","styles/search-form-style.js","components/searchForm.js","components/app.js","index.js"],"names":["LineOne","styled","h2","LineTwo","LocationDetails","props","city","errorMessage","country","className","toUpperCase","defaultProps","AllForecasts","div","SingleForecast","DetailsButton","button","ForecastSummary","date","temperature","description","data-testid","moment","format","name","iconId","icon","onClick","onSelect","ForecastSummaries","forecasts","map","forecast","onForecastSelect","toString","max","DetailContainer","DetailInfo","ForecastDetails","wind","humidity","Moment","min","speed","getForecast","searchText","setSelectedDate","setForecasts","setLocation","setErrorMessage","endpoint","axios","get","then","response","data","location","catch","error","status","console","SearchContainer","Input","input","Button","SearchForm","setSearchText","onSubmit","type","value","onChange","event","target","placeholder","App","useState","selectedDate","useEffect","selectedForecast","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c32b734a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const LineOne = styled.h2`\ncolor: rgba(0, 0, 0, 0.62);\nfont-size: 64px;\nline-height: 75px;\nmargin: 10px;\n\n@media screen and (max-width: 480px) {\n    margin: 0px;\n    font-size: 36px;\n    line-height: 42px;\n\n}\n`\nexport const LineTwo = styled.h2`\nwidth: 400px;\ncolor: rgba(0, 0, 0, 0.62);\nfont-size: 64px;\nline-height: 75px;\nmargin: 10px;\nmargin-bottom: 0px;\n\n@media screen and (max-width: 480px) {\n    margin: 0px;\n    font-size: 36px;\n    line-height: 42px;\n}\n`\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {LineOne, LineTwo} from \"../styles/location-details-style\";\n\nconst LocationDetails = (props) => {\n    const { city, country, errorMessage } = props;\n    return errorMessage ? (\n      <h2>{errorMessage}</h2>\n    ) : (\n        <>\n      <LineOne className=\"location-details\">{`WEATHER IN ${city.toUpperCase()}`}</LineOne>\n      <LineTwo className=\"location-details-two\">THIS WEEK </LineTwo>\n      </>\n    );\n  };\n  \n  LocationDetails.defaultProps = {\n    errorMessage: \"\",\n  };\n  \n  LocationDetails.propTypes = {\n    city: PropTypes.string.isRequired,\n    country: PropTypes.string.isRequired,\n    errorMessage: PropTypes.string,\n  };\n  \n  export default LocationDetails;","import styled from \"styled-components\";\n\n export const AllForecasts = styled.div` \n    margin: 40px 100px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: space-between;\n    color: rgba(0, 0, 0, 0.62);\n    background: rgba(250, 237, 235, 0.6);\n\n   @media screen and (max-width: 480px) {\n    margin: 20px 10px;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n   }\n    `\n\n export const SingleForecast = styled.h2`\n    margin: 15px;\n    font-size: 1.5em;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 30px 30px;\n    background-color: grey;\n    border-radius: 20px;\n    text-align: center;\n    `\n\n   export const DetailsButton = styled.button`\n   border-color: rgba(206, 121, 107, 1);\n   background: rgba(206, 121, 107, 1);\n   margin-top: 10px;\n   font-size: 15px;\n   border-radius: 10px;\n   height: 30px;\n   width: 100px;\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WeatherIcon from 'react-icons-weather';\nimport moment from \"moment\";\nimport {SingleForecast, DetailsButton} from \"../styles/forecast-styles\";\n\n\nconst ForecastSummary = (props) => {\n    const {\n    date,\n    temperature,\n    description, } = props;\n    \n    return (\n      <SingleForecast>\n        \n        <div className=\"date\" data-testid=\"date-id\">\n         <span>{moment(props.date).format('ddd Do MMM')}</span>\n        </div>\n        <div className=\"temperature\" data-testid=\"temperature-id\">\n         <span>{temperature}&deg;c</span>\n        </div>\n        <div className=\"description\" data-testid=\"description-id\">\n        <span>{description}</span>\n        </div>\n        <div className=\"icon\" data-testid=\"icon-id\">\n        <span>  <WeatherIcon name=\"owm\" iconId={props.icon} /> </span>\n        </div>\n        <DetailsButton onClick={() => props.onSelect(props.date)}>More details</DetailsButton>\n    \n      </SingleForecast>\n    );\n  };\n\nForecastSummary.propTypes = {\nforecast: PropTypes.shape({\n    date: PropTypes.string,\n    temperature: PropTypes.string,\n    description: PropTypes.string,\n    icon: PropTypes.object,\n}),\n};\n\nexport default ForecastSummary;\n\n","import React from 'react';\nimport ForecastSummary from './forecast-summary';\nimport PropTypes from \"prop-types\";\nimport {AllForecasts} from \"../styles/forecast-styles\";\n\nimport '../styles/forecast-styles.js';\n\nconst ForecastSummaries = props => (\n    <AllForecasts>\n        {\n            props.forecasts.map(forecast => (\n                <ForecastSummary\n                onSelect={props.onForecastSelect}\n                key={forecast.date}\n                date={forecast.date}\n                description={forecast.description}\n                icon={forecast.icon.toString()}\n                temperature={forecast.temperature.max}\n                />\n            ))\n        }\n    </AllForecasts>\n);\n\nForecastSummaries.propTypes = {\n    date: PropTypes.number,\n    description: PropTypes.string,\n    icon: PropTypes.number,\n    temperature: PropTypes.number,\n};\n\nexport default ForecastSummaries;","import styled from \"styled-components\";\n\nexport const DetailContainer = styled.div`\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nbackground: grey;\nwidth: 400px;\nborder-radius: 20px;\ncolor: rgba(0, 0, 0, 0.62);\n\n@media screen and (max-width: 480px) {\n    width: 340px;\n}\n\n`\nexport const DetailInfo = styled.div`\npadding: 10px;\npadding-bottom: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"moment\";\nimport WeatherIcon from \"react-icons-weather\";\nimport {DetailContainer, DetailInfo} from \"../styles/forecast-details-style\";\n\nconst ForecastDetails = ({ forecast }) => {\n  const { \n    date, \n    icon, \n    temperature, \n    wind, \n    humidity } = forecast;\n\n  return (\n    <DetailContainer>\n      <DetailInfo>\n    <h3>Details:</h3>\n      <div className=\"main-date\">{Moment(date).format(\"ddd Do MMM\")}</div>\n      <br />\n      <div className=\"main-icon\" data-testid=\"test-icon\">\n        {<WeatherIcon name=\"owm\" iconId={icon} />}\n      </div>\n\n      <div className=\"max-temperature\">Maximum Temperature: {temperature.max}&deg;c</div>\n      <br />\n      <div className=\"min-temperature\">Minimum Temperature: {temperature.min}&deg;c</div>\n      <br />\n      <div className=\"big-humidity\">Humidity: {humidity}%</div>\n      <br />\n      <div className=\"wind-speed\">\n        Wind: {wind.speed}mph {<i className={\"windy\"} />}\n      </div>\n      </DetailInfo>\n    </DetailContainer>\n  );\n};\n\nForecastDetails.propTypes = {\n  forecast: PropTypes.object.isRequired,\n};\n\nexport default ForecastDetails;","import axios from \"axios\";\n\nconst getForecast = (\n    searchText,\n    setSelectedDate,\n    setForecasts,\n    setLocation,\n    setErrorMessage\n      ) => {\n        setErrorMessage(\"\");\n\n        let endpoint = \"https://mcr-codes-weather-app.herokuapp.com/forecast\";\n\n        if (searchText) {\n          endpoint += `?city=${searchText}`;\n        }\n        return axios\n          .get(endpoint)\n          .then((response) => {\n            setSelectedDate(response.data.forecasts[0].date);\n            setForecasts(response.data.forecasts);\n            setLocation(response.data.location);\n          })\n          .catch((error) => {\n            const { status } = error.response;\n            if (status === 404) {\n              setErrorMessage(\"That place doesn't exist! Please try again.\");\n              console.error(\"Location is not valid\", error);\n            }\n            if (status === 500) {\n              setErrorMessage(\"Server error, try again later.\");\n              console.error(\"Server error\", error);\n            }\n          });\n      };\n\nexport default getForecast;\n","import styled from \"styled-components\";\n\nexport const SearchContainer = styled.div`\nmargin-left: 800px;\nmargin-bottom: 50px;\ndisplay: flex;\nflex-direction: column;\ntext-align: center;\n\n@media screen and (max-width: 480px) {\n    margin: 0px;\n    padding-top: 15px;\n   }\n`\nexport const Input = styled.input`\nmargin-top: 0px;\nmargin-bottom: 30px;\nborder-color: rgba(0, 0, 0, 0.62);\nbackground: rgba(0, 0, 0, 0.1);\nfont-size: 1em;\nheight: 30px;\nwidth: 300px;\nborder-radius: 10px;\n\n@media screen and (max-width: 480px) {\n    margin-bottom: 15px;\n   }\n`\n\nexport const Button = styled.button`\nborder-color: rgba(206, 121, 107, 1);\nbackground: rgba(206, 121, 107, 1);\nfont-size: 1em;\nborder-radius: 10px;\nheight: 30px;\nwidth: 100px;\n\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Input, SearchContainer, Button } from \"../styles/search-form-style\";\n\nconst SearchForm = ({searchText, setSearchText, onSubmit}) => {\n    const handleInputChange = (event) => setSearchText(event.target.value);\n  \n    return (\n<SearchContainer>\n  <div>\n      <Input type=\"text\" value={searchText} onChange={handleInputChange} placeholder=\"   Type in city..\"/>\n      </div>\n      <div>\n      <Button type=\"submit\" onClick={onSubmit}>\n        Search\n      </Button>\n      </div>\n    </SearchContainer>\n    );\n  };\n\n  SearchForm.propTypes = {\n    searchText: PropTypes.string.isRequired,\n    setSearchText: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\nexport default SearchForm;","import React, {useState, useEffect } from 'react';\nimport LocationDetails from './location-details';\nimport ForecastSummaries from './forecast-summaries';\nimport ForecastDetails from './forecast-details';\nimport getForecast from \"./getForecast\";\nimport SearchForm from './searchForm';\n\nimport '../styles/app.css';\n\n\nconst App = () => {\n    const [location, setLocation] = useState({city: \"\", country: \"\"});\n    const [selectedDate, setSelectedDate] = useState(0);\n    const [forecasts, setForecasts] = useState([]);\n    const [searchText, setSearchText] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n      getForecast(searchText, setSelectedDate, setForecasts, setLocation, setErrorMessage);\n    }, []);\n\n    const selectedForecast = forecasts.find(forecast => forecast.date === selectedDate);\n\n    const handleForecastSelect = (date) => {\n        setSelectedDate(date);\n\n    };\n\n    const handleCitySearch = () => {\n        getForecast(searchText, setSelectedDate, setForecasts, setLocation, setErrorMessage);\n        setSearchText(\"\");\n        };\n\n\nreturn (\n    <div className=\"forecast\">\n\n < LocationDetails\n city = {location.city}\n country = {location.country}\n errorMessage = {errorMessage}\n />\n      <SearchForm\n       searchText={searchText}\n       setSearchText={setSearchText}\n       onSubmit={handleCitySearch}\n      />\n \n {!errorMessage && (\n        <>\n          <ForecastSummaries\n            forecasts={forecasts}\n            onForecastSelect={handleForecastSelect}\n          />\n          {selectedForecast && <ForecastDetails forecast={selectedForecast} />}\n        </>\n      )}\n\n </div>\n);\n\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\n\n\nReactDOM.render(\n<React.StrictMode>\n<App/> \n</React.StrictMode>, \ndocument.getElementById('root'));"],"sourceRoot":""}